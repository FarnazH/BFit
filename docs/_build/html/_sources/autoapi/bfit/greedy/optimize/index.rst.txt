:py:mod:`bfit.greedy.optimize`
==============================

.. py:module:: bfit.greedy.optimize

.. autoapi-nested-parse::

   Module responsible for optimizing functions catered for least-squares or Kullback-Leibler.

   Functions
   ---------
   - optimize_using_nnls : Optimize via nnls.
   - optimize_using_nnls_valence : Optimize valence densities via nnla.
   - optimize_using_slsqp : Optimize least-squares or Kullback-Leibler formula via SLSQP.
   - optimize_using_l_bfgs : Optimize least-squares via L-BFGS method.

   ..
       !! processed by numpydoc !!


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   bfit.greedy.optimize.optimize_using_nnls
   bfit.greedy.optimize.optimize_using_nnls_valence
   bfit.greedy.optimize.optimize_using_slsqp
   bfit.greedy.optimize.optimize_using_l_bfgs



.. py:function:: optimize_using_nnls(true_dens, cofactor_matrix)

   
















   ..
       !! processed by numpydoc !!

.. py:function:: optimize_using_nnls_valence(true_val_dens, cofactor_matrix)

   
















   ..
       !! processed by numpydoc !!

.. py:function:: optimize_using_slsqp(density_model, initial_guess, bounds=None, *args)

   
   Optimize the model via SLSQP.

   Works for Kullback-leibler class or DensityModel class.

   :param density_model:
   :param initial_guess:
   :param bounds:
   :type bounds: optional
   :param \*args: Additional arguments for the cost function defined from 'density_model'.
   :type \*args: optional

   :returns: Updated parameters after optimization procedure.
   :rtype: list















   ..
       !! processed by numpydoc !!

.. py:function:: optimize_using_l_bfgs(density_model, initial_guess, bounds=None, *args)

   
   Optimize the DensityModel class via L-BFGS.

   :param density_model:
   :param initial_guess:
   :param bounds:
   :type bounds: optional

   :returns: Updated parameters.
   :rtype: list















   ..
       !! processed by numpydoc !!

